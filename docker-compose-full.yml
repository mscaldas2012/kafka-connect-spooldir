---
version: '3.2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - local_nw

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:19092,EXTERNAL://192.168.86.47:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
      - 19092:19092
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-logs:/var/lib/kafka/logs
    networks:
      - local_nw

  schema-registry:
   image: confluentinc/cp-schema-registry:latest
   container_name: schema-registry
   environment:
     - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:19092
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
   ports:
     - 8081:8081
   depends_on:
     - zookeeper
     - kafka
   networks:
     - local_nw
  
  kafka-rest:
   image: confluentinc/cp-kafka-rest:latest
   container_name: kafka-rest
   environment:
      - KAFKA_REST_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:19092
      - KAFKA_REST_LISTENERS=http://0.0.0.0:8082
      - KAFKA_REST_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - KAFKA_REST_HOST_NAME=kafka-rest
      - KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000
      - KAFKA_REST_CLIENT_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN=*
   ports:
     - 8082:8082
   depends_on:
     - zookeeper
     - schema-registry
   networks:
     - local_nw

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "PLAITEXT://kafka:19092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter 
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter 
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_REST_ADVERTISED_HOST_NAME: '192.168.86.47'
      CONNECT_PLUGIN_PATH: 'usr/share/java,etc/kafka-connect/jars'
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
    volumes:
      - "./connect-jars:/etc/kafka-connect/jars"
      - "./dropfiles/incoming:/incoming"
      - "./dropfiles/processed:/processed"
      - "./dropfiles/errors:/errors"
    networks:
      - local_nw

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:latest
    container_name: connect-ui
    ports:
      - "8003:8000"
    environment:
      CONNECT_URL: "http://kafka-connect:8083/"
      PROXY: "true"
    depends_on:
      - kafka-connect
    networks:
      - local_nw

  kafka-topics-ui:
    image: landoop/kafka-topics-ui
    container_name: kafka-topics-ui
    ports:
        - '8001:8000'
    environment:
        - 'KAFKA_REST_PROXY_URL= http://kafka-rest:8082'
        - RECORD_POLL_TIMEOUT= 5000
        - 'PROXY= "true"'
        - 'MAX_BYTES=1000000'
        - 'RECORD_POLL_TIMEOUT=2000'
    depends_on:
        - kafka-rest
    networks:
        - local_nw

  # schema-registry-ui:
  #   image: landoop/schema-registry-ui
  #   container_name: schema-registry-ui
  #   ports:
  #       - '8002:8000'
  #   environment:
  #       - 'SCHEMAREGISTRY_URL= http://schema-registry:8081'
  #       - 'PROXY= true'
  #   depends_on:
  #       - schema-registry
  #   networks:
  #       - local_nw

  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:latest
  #   container_name: control-center
  #   ports:
  #       - "19021:9021"
  #   environment:
  #       CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #       CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
  #       CONTROL_CENTER_REPLICATION_FACTOR: 1
  #       CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
  #       CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
  #       CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
  #   networks:
  #     - local_nw

volumes:
  zookeeper-data:
    driver: local
    driver_opts:
      type: volume
      device: $PWD/zookeeper-data
      o: bind
  zookeeper-logs:
    driver: local
    driver_opts:
      type: volume
      device: $PWD/zookeeper-logs
      o: bind

  kafka-data:
    driver: local
    driver_opts:
      type: volume
      device: $PWD/kafka-data
      o: bind
  kafka-logs:
    driver: local
    driver_opts:
      type: volume
      device: $PWD/kafka-logs
      o: bind

networks:
  local_nw:
    #   driver: bridge
    external:
      name: local_nw