version: '3'
services:
    zookeeper:
        image: 'confluentinc/cp-zookeeper:latest'
        container_name: zookeeper
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
        ports:
            - '2181:2181'
        volumes:
            - '/var/kafka/volumes/zookeeper/data:/var/lib/zookeeper/data'
            - '/var/kafka/volumes/zookeeper/logs:/var/lib/zookeeper/log'
        networks:
            - sdh_nw
    kafka:
        image: 'confluentinc/cp-kafka:latest'
        container_name: kafka
        environment:
            - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
            - 'KAFKA_LISTENERS=INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092'
            - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
            - 'KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:19092,EXTERNAL://10.128.41.145:9092'
            - 'KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL'
            - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
            - 'KAFKA_LOG_RETENTION_MS=-1'
        ports:
            - '9092:9092'
            - '19092:19092'
        depends_on:
            - zookeeper
        volumes:
            - '/var/kafka/volumes/kafka/data:/var/lib/kafka/data'
            - '/var/kafka/volumes/kafka/logs:/var/lib/kafka/logs'
        networks:
            - sdh_nw
    schema-registry:
        image: 'confluentinc/cp-schema-registry:latest'
        container_name: schema-registry
        environment:
            - 'SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:19092'
            - SCHEMA_REGISTRY_HOST_NAME=schema-registry
            - 'SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081'
        ports:
            - '8081:8081'
        depends_on:
            - zookeeper
            - kafka
        networks:
            - sdh_nw
    kafka-rest:
        image: 'confluentinc/cp-kafka-rest:latest'
        container_name: kafka-rest
        environment:
            - 'KAFKA_REST_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:19092'
            - 'KAFKA_REST_LISTENERS=http://kafka-rest:8082'
            - 'KAFKA_REST_SCHEMA_REGISTRY_URL=http://schema-registry:8081'
            - KAFKA_REST_HOST_NAME=kafka-rest
            - KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000
            - KAFKA_REST_CLIENT_SECURITY_PROTOCOL=PLAINTEXT
            - KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
            - KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN=*
        ports:
            - '8082:8082'
        depends_on:
            - zookeeper
            - schema-registry
        networks:
            - sdh_nw
    kafka-connect:
        image: 'confluentinc/cp-kafka-connect:latest'
        container_name: kafka-connect
        ports:
            - '8083:8083'
        environment:
            CONNECT_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:19092'
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: eip-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
            CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
            CONNECT_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
            CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
            CONNECT_REST_ADVERTISED_HOST_NAME: 10.128.41.145
            CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
            CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
            CONNECT_PLUGIN_PATH: 'usr/share/java,etc/kafka-connect/jars,usr/share/java/kafka-connect-elasticsearch'
            CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
            CONNECT_LOG4J_LOGGERS: 'org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR,com.github.jcustenborder.kafka.connect.spooldir.InputFileDequeue=ERROR'
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
        depends_on:
            - zookeeper
            - kafka
            - schema-registry
        volumes:
            - '/var/kafka-connect/jars:/etc/kafka-connect/jars'
            - '/var/eip-legacy/incoming:/home'
            - '/var/eip-legacy/processed:/var'
            - '/var/eip-legacy/errors:/tmp'
        networks:
            - sdh_nw
    kafka-topics-ui:
        image: landoop/kafka-topics-ui
        container_name: kafka-topics-ui
        ports:
            - '8001:8000'
        environment:
            - 'KAFKA_REST_PROXY_URL= http://kafka-rest:8082'
            - RECORD_POLL_TIMEOUT= 5000
            - 'PROXY= "true"'
            - 'MAX_BYTES=1000000'
            - 'RECORD_POLL_TIMEOUT=2000'
        depends_on:
            - kafka-rest
        networks:
            - sdh_nw
    schema-registry-ui:
        image: landoop/schema-registry-ui
        container_name: schema-registry-ui
        ports:
            - '8002:8000'
        environment:
            - 'SCHEMAREGISTRY_URL= http://schema-registry:8081'
            - 'PROXY= true'
        depends_on:
            - schema-registry
        networks:
            - sdh_nw
  
    kafka-connect-ui:
        image: 'landoop/kafka-connect-ui:latest'
        container_name: kafka-connect-ui
        ports:
            - '8003:8000'
        environment:
            CONNECT_URL: 'http://kafka-connect:8083/'
            PROXY: 'true'
        depends_on:
            - kafka-connect
        networks:
            - sdh_nw

    ksql-server:
        image: 'confluentinc/cp-ksql-server:latest'
        container_name: ksql-server
        ports:
            - '8088:8088'
        environment:
            KSQL_BOOTSTRAP_SERVERS: 'http://kafka:19092'
            KSQL_LISTENERS: 'http://0.0.0.0:8088'
            KSQL_KSQL_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
            KSQL_KSQL_SERVICE_ID: eip_insights_data_stream
            KSQL_HOST_NAME: ksql-server
            KSQL_KSQL_SERVER_UI_ENABLED: 'true'
        depends_on:
            - zookeeper
            - kafka
            - schema-registry
        networks:
            - sdh_nw


    control-center:
        image: confluentinc/cp-enterprise-control-center:latest
        container_name: control-center
        ports:
            - "19021:9021"
        environment:
            CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
        networks:
          - sdh_nw

networks:
    sdh_nw:
        driver: bridge
